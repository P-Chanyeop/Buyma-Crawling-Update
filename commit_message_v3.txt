feat: 크롤링 시스템 안정성 완전 개선 및 UI 스레드 분리 (v3.4.8)

🛡️ 워커 스레드 UI 직접 조작 완전 제거
- QApplication.processEvents() 호출 제거로 크래시 방지
- 워커 스레드에서 메인 스레드 UI 직접 접근 금지
- 5698, 5871 라인 processEvents() 호출 제거

📡 시그널/슬롯 패턴 완전 적용
- crawling_table_update_signal 새로운 시그널 추가
- 데이터 저장과 UI 업데이트 완전 분리
- 모든 UI 업데이트를 메인 스레드에서 안전하게 처리

🔧 함수 역할 분리
- add_crawling_result_safe: 데이터 저장만 담당 (UI 조작 없음)
- update_crawling_table_safe: 테이블 UI 업데이트만 담당
- 각 함수의 책임 명확히 분리

⚡ 복잡한 UI 조작 최소화
- 폰트 설정, 색상 설정 등 복잡한 UI 조작 제거
- 기본 텍스트만 설정으로 성능 향상
- 크래시 위험 요소 대폭 감소

🎯 크롤링 중 프로그램 튕김 완전 해결
- 워커 스레드에서 메인 스레드 UI 안전 접근
- 시그널/슬롯을 통한 스레드 간 안전한 통신
- PyQt6 스레드 안전성 규칙 완전 준수

📊 메모리 효율성 개선
- 불필요한 UI 조작 제거로 메모리 사용량 최적화
- 복잡한 폰트/색상 처리 제거로 성능 향상
- 안전장치 강화로 예외 상황 대응

📋 주요 변경사항
- crawling_table_update_signal 시그널 추가 및 연결
- 워커 스레드 크롤링 함수에서 UI 직접 조작 완전 제거
- 시그널 기반 안전한 UI 업데이트 시스템 구축
- README.md 업데이트: v3.4.8 버전 정보 및 가이드 추가

🧪 테스트 우선순위 업데이트
- 크롤링 중 프로그램 튕김 해결을 최우선 테스트 항목으로 추가
- UI 스레드 분리 관련 문제 해결 가이드 추가

Breaking Changes: 없음 (내부 구조 개선)
